{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "String",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "String",
      "metadata": {
        "description": "The location of AKS resource."
      }
    },
    "dnsPrefix": {
      "type": "String",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "tagBusinessUnit": {
      "type": "string"
    },
    "tagBusinessOwner": {
      "type": "string"
    },
    "tagApplication": {
      "type": "string"
    },
    "tagResourceFunction": {
      "type": "string"
    },
    "tagEnvironment": {
      "type": "string"
    },
    "osDiskSizeGB": {
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 1023,
      "type": "Int",
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      }
    },
    "agentCount": {
      "defaultValue": 3,
      "minValue": 1,
      "maxValue": 50,
      "type": "Int",
      "metadata": {
        "description": "The number of agent nodes for the cluster."
      }
    },
    "agentVMSize": {
      "defaultValue": "Standard_D2_v2",
      "type": "String",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "servicePrincipalClientId": {
      "type": "SecureString",
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      }
    },
    "servicePrincipalClientSecret": {
      "type": "SecureString",
      "metadata": {
        "description": "The Service Principal Client Secret."
      }
    },
    "AADserverAppID": {
      "type": "string",
      "metadata": {
        "description": "AppID of server app (AKSADServer) Service Principal used to integrate with AAD"
      }
    },
    "AADserverAppSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Secret of server app (AKSADServer) Service Principal used to integrate with AAD"
      }
    },
    "AADclientAppID": {
      "type": "string",
      "metadata": {
        "description": "AppID of client app (AKSADClient) Service Principal used to integrate with AAD"
      }
    },
    "tenantID": {
      "type": "string",
      "metadata": {
        "description": "Azure subscription Tenant ID"
      }
    },
    "osType": {
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux"
      ],
      "type": "String",
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "kubernetesVersion": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "enableOmsAgent": {
      "defaultValue": true,
      "type": "Bool",
      "metadata": {
        "description": "boolean flag to turn on and off of omsagent addon"
      }
    },
    "omsWorkspacename": {
      "type": "String",
      "metadata": {
        "description": "Specify the name of the OMS workspace"
      }
    },
    "omsSku": {
      "defaultValue": "standalone",
      "allowedValues": [
        "Standalone",
        "PerNode",
        "Free",
        "PerGB2018"
      ],
      "type": "String",
      "metadata": {
        "description": "Select the SKU for your workspace"
      }
    },
    "omsWorkspacelocation": {
      "type": "String",
      "allowedValues": [
        "eastus",
        "westus"
      ],
      "defaultValue": "eastus",
      "metadata": {
        "description": "Specifies the location in which to create the workspace."
      }
    },
    "enableHttpApplicationRouting": {
      "defaultValue": true,
      "type": "Bool",
      "metadata": {
        "description": "boolean flag to turn on and off of http application routing"
      }
    },
    "networkPlugin": {
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "type": "String",
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "maxPods": {
      "defaultValue": 30,
      "type": "Int",
      "metadata": {
        "description": "Maximum number of pods that can run on a node."
      }
    },
    "enableRBAC": {
      "defaultValue": true,
      "type": "Bool",
      "metadata": {
        "description": "boolean flag to turn on and off of RBAC"
      }
    },
    "vnetSubnetID": {
      "type": "String",
      "metadata": {
        "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
      }
    },
    "serviceCidr": {
      "type": "String",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "String",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "String",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    }
  },
  "variables": {
    "containersolution": "[Concat('ContainerInsights', '(', parameters('omsworkspaceName'), ')')]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[parameters('resourceName')]",
      "apiVersion": "2018-03-31",
      "location": "[parameters('location')]",
      "tags": {
        "BusinessUnitID": "[parameters('tagBusinessUnit')]",
        "BusinessOwner": "[parameters('tagBusinessOwner')]",
        "Application": "[parameters('tagApplication')]",
        "Environment": "[parameters('tagEnvironment')]",
        "ResourceFunction": "[parameters('tagResourceFunction')]"
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('microsoft.operationalinsights/workspaces', parameters('omsWorkspacename'))]"
            }
          }
        },
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": "[parameters('agentCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[parameters('vnetSubnetID')]"
          }
        ],
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        },
        "aadProfile": {
          "clientAppID": "[parameters('AADclientAppID')]",
          "serverAppID": "[parameters('AADserverAppID')]",
          "serverAppSecret": "[parameters('AADserverAppSecret')]",
          "tenantID": "[parameters('tenantID')]"
        }
      },
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', parameters('omsWorkspacename'))]"

      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('omsWorkspacename')]",
      "apiVersion": "2017-03-15-preview",
      "location": "[parameters('omsWorkspacelocation')]",
      "properties": {
        "sku": {
          "Name": "[parameters('omsSku')]"
        },
        "features": {
          "searchVersion": 1
        }
      },
      "resources": [
        {
          "apiVersion": "2015-11-01-preview",
          "type": "Microsoft.OperationsManagement/solutions",
          "location": "[parameters('omsWorkspacelocation')]",
          "name": "[variables('containersolution')]",
          "properties": {
            "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspacename'))]"
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspacename'))]"
          ],
          "plan": {
            "name": "[variables('containersolution')]",
            "product": "[Concat('OMSGallery/', 'ContainerInsights')]",
            "promotionCode": "",
            "publisher": "Microsoft"
          }
        }
      ]
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "String",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
    }
  }
}